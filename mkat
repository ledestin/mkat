#!/bin/bash

# This file is part of Mkat
#
# Copyright (C) 2004 Dmitry Maksyoma <ledestin at amur.ru>. All
# Rights Reserved.
#
# Mkat is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,
# USA.

RCFILE=mkatrc 
[ -f /etc/$RCFILE ] && source /etc/$RCFILE
[ -f ~/.$RCFILE ] && source ~/.$RCFILE

function usage {
  echo "usage: $0 [option]";
  echo "  -f			overwrite list file"
  echo "  -s <regex>		search the CD database"
  echo "  -m <file>...		make md5 sum(s) and search for them in the db"
  echo "      --md5dir <dir>	print files with md5 sums not present in the db"
  echo "  -y			cycle { mkat; eject; }"
  echo "  -q			be quiet"
  echo "  -h, --help		print this help"
  exit $1
}

#process parameters
found=1
while [ $found ]; do
  case "$1" in
    "-h"|"--help") usage 0 ;;
    "-q") CHILD_PARAMS="-q"; GREP_PARAMS="-q" ;;
    "-y") CYCLE_CATALOG=1 ;;
    "--md5dir")
      DIR="$2"
      [ -z "$DIR" ] && DIR=. ;;
    *) unset found ;;
  esac
  [ $found ] && shift
done

MKAT="$0${CHILD_PARAMS:+ $CHILD_PARAMS}"

#process --md5dir option
if [ "$DIR" ]; then
  IFS=:
  for f in `find "$DIR" -type f -printf '%p:'`; do
    $MKAT -q -m "$f"
    [ $? -ne 0 ] && echo "$f";
  done;
  exit
fi

#search the database with grep (-s option)
[ _$1 = _"-s" ] && { grep $GREP_PARAMS -i -E "$2" "$LISTDIR"/*.list; exit $?; }

#search by md5 sum of a file
if [ _"$1" = _"-m" ]; then
  shift
  md5sum "$@" | awk '{ printf "%s|", $1 }' | sed 's/|$/\n/' | xargs $MKAT -s
  exit $?
fi

#catalog many CDs: cycle mkat, eject, wait for user input
if [ $CYCLE_CATALOG ]; then
  while : ; do
    $MKAT && sleep $AUTOFS_DELAY && eject
    read -p "Press Enter when ready..."
    [ $? -eq 0 ] || exit
  done
fi

#catalog the CD
LABEL=`isoinfo -d -i $DRIVE | sed -ne 's/Volume id: //p'`
[ -z "$LABEL" ] && { echo "could not obtain CD label"; LABEL="NO_LABEL"; }
DEST="$LISTDIR/$LABEL.list"
{ [ _$1 != _"-f" ] \
  && [ -e "$DEST" ] ; } && \
  { echo >&2 "file already exists: '$DEST'"; exit 1; }

{
echo $LABEL
IFS='
'
for f in `find $CD -mindepth 1`; do
  rel=`echo "$f" | sed -ne "s!$CD!!;s!^/!!p"`
  if [ -d "$f" ]; then
    echo $rel
  elif [ -f "$f" ]; then
    echo -e $rel:`du -h "$f" | awk '{print $1}'`:`md5sum "$f" | awk '{ print $1}'`
  fi
done
} | tee "$DEST"
